<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Magento\Catalog\Block\Product\ProductList\Toolbar;
use Hyva\Theme\ViewModel\HeroiconsOutline;
use Hyva\Theme\ViewModel\SvgIcons;
use Magento\Framework\Escaper;

/** @var Escaper $escaper */
/** @var Toolbar $block */
/** @var ViewModelRegistry $viewModels */

/** @var HeroiconsOutline $heroicons */
$heroicons = $viewModels->require(HeroiconsOutline::class);

/** @var SvgIcons $hyvaicons */
$hyvaicons = $viewModels->require(SvgIcons::class);

$uniqueId = '_' . uniqid();
$additionalOptions = ['page' => 'p'];

$vatSwitcher = $block->fetchView($block->getTemplateFile('Magento_Theme::html/header/vat-switcher.phtml'));
$viewModeSwitcher = $block->fetchView($block->getTemplateFile('Magento_Catalog::product/list/toolbar/viewmode.phtml'));
$sorter = $block->fetchView($block->getTemplateFile('Magento_Catalog::product/list/toolbar/sorter.phtml'));

$productCount = $block->getData('totalCount') . ' ' . $escaper->escapeHtml(__('products found'));
?>
<script>
    function initToolbar<?= /** @noEscape */  $uniqueId ?>() {
        return {
            options: <?= /* @noEscape */ $block->getWidgetOptionsJson($additionalOptions) ?>.productListToolbarForm || {},
            isMobile: window.innerWidth <= 1024,

            getUrlParams: function () {
                let decode = window.decodeURIComponent,
                  urlPaths = this.options.url.split('?'),
                  urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],
                  params = {},
                  parameters, i;

                for (i = 0; i < urlParams.length; i++) {
                    parameters = urlParams[i].split('=');
                    params[decode(parameters[0])] = parameters[1] !== undefined ?
                      decode(parameters[1].replace(/\+/g, '%20')) :
                      '';
                }

                return params;
            },
            getCurrentLimit: function () {
                return this.getUrlParams()[this.options.limit] || this.options.limitDefault;
            },
            getCurrentPage: function () {
                return this.getUrlParams()[this.options.page] || 1;
            },
            changeUrl(paramName, paramValue, defaultValue) {
                let urlPaths = this.options.url.split('?'),
                  baseUrl = urlPaths[0],
                  paramData = this.getUrlParams(),
                  currentPage = this.getCurrentPage(),
                  newPage;

                /**
                 * calculates the page on which the first item of the current page will
                 * be with the new limit and sets that number as the new page
                 */
                if (currentPage > 1 && paramName === this.options.limit) {
                    newPage = Math.floor(this.getCurrentLimit() * (currentPage - 1) / paramValue) + 1;

                    if (newPage > 1) {
                        paramData[this.options.page] = newPage;
                    } else {
                        delete paramData[this.options.page];
                    }
                }

                paramData[paramName] = paramValue;

                if (this.options.post) {
                    hyva.postForm({action: baseUrl, data: paramData, skipUenc: true});
                } else {
                    if (paramValue === defaultValue.toString()) {
                        delete paramData[paramName];
                    }
                    paramData = Object.keys(paramData).length === 0
                      ? ''
                      : '?' + (new URLSearchParams(paramData));
                    location.href = baseUrl + paramData
                }
            },
            updateSortParam(selectedOptionValue) {
                const url = new URL(window.location.href);

                if (selectedOptionValue === 'popularity') {
                    // Remove the "sort" parameter, keeping other parameters intact
                    url.searchParams.delete('sort');
                } else {
                    url.searchParams.set('sort', selectedOptionValue);
                }

                window.location.href = url.toString();
            }
        }
    }
</script>
<?php if ($block->getCollection()->getSize()): ?>
    <div
        x-data="{
            ...initToolbar<?= /** @noEscape */ $uniqueId ?>(),
            isMobile: window.innerWidth <= 1024, isFilterAndSortOverlayOpened: false
        }"
        @resize.window="isMobile = window.innerWidth <= 1024"
        class="toolbar toolbar-products flex flex-col justify-center items-center
         md:flex-row md:justify-between md:px-10"
        x-cloak
    >
        <!-- Mobile Filter and Sort Button -->
        <div
          x-show="isMobile"
          class="flex justify-between w-full border-y border-primary bg-white fixed bottom-0 z-50 left-0"
        >
            <span
              role="button"
              class="flex text-base uppercase font-extrabold w-full px-4 py-[13px]"
              @click="isFilterAndSortOverlayOpened = true"
            >
                <div class="flex gap-x-2 items-center">
                    <?= $hyvaicons->renderHtml('filter-and-sort', '', 20, 20) ?>
                    <?= $escaper->escapeHtml(__('Filter and sort')) ?>
                </div>
            </span>
            <div class="py-4 px-[13px]">
                <?= /** @noEscape */ $viewModeSwitcher ?>
            </div>
        </div>

        <!-- Overlay for Filter and Sort on Mobile -->
        <div
          x-show="isFilterAndSortOverlayOpened"
          class="fixed inset-0 bg-white z-50 flex flex-col"
        >
            <div class="flex justify-between items-center py-[14px] px-4 bg-secondary-lighter">
                <h4 class="uppercase text-lg font-extrabold">
                    <?= $escaper->escapeHtml(__('Filter and sort')) ?>
                </h4>
                <button @click="isFilterAndSortOverlayOpened = false">
                    <?= $heroicons->xHtml('', 24, 24, ['aria-hidden' => 'true']); ?>
                </button>
            </div>

            <!-- Overlay Content: Sorter, VAT Switcher, and Filter for Mobile -->
            <div class="overflow-y-auto">
                <?= /** @noEscape */ $sorter ?>
                <div class="vat-switcher border-y-2 border-secondary-lighter">
                    <?= /** @noEscape */ $vatSwitcher ?>
                </div>
                <?php
                $filtersBlock = $block->getChildBlock('category.filters.mobile');

                if ($filtersBlock) {
                    $filtersBlock->setData('filters', $block->getData('filters'));
                }
                ?>

                <?= $block->getChildHtml('category.filters.mobile') ?>
            </div>
        </div>

        <!-- Desktop Toolbar Content -->
        <div class="my-4 md:my-0" x-show="isMobile">
            <?= $productCount ?>
        </div>
        <?php if ($block->getIsBottom()): ?>
            <?= /** @noEscape */ $block->fetchView($block->getTemplateFile(
                'Magento_Catalog::product/list/toolbar/amount.phtml')) ?>
            <?= $block->getPagerHtml() ?>
            <?= /** @noEscape */ $block->fetchView($block->getTemplateFile(
                'Magento_Catalog::product/list/toolbar/limiter.phtml')) ?>
        <?php else: ?>
            <?php if ($block->isExpanded()): ?>
                <div class="flex w-full justify-between items-center" x-show="!isMobile">
                    <?= $productCount ?>
                    <div class="order-0">
                        <?= /** @noEscape */ $vatSwitcher ?>
                    </div>
                    <div class="flex items-center gap-x-4">
                        <?= /** @noEscape */ $viewModeSwitcher ?>
                        <?= /** @noEscape */ $sorter ?>
                    </div>
                </div>
            <?php endif ?>
        <?php endif ?>
    </div>
<?php endif ?>
