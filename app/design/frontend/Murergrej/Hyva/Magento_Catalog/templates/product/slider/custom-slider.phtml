<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsOutline;
use Hyva\Theme\ViewModel\ProductListItem;
use Hyva\Theme\ViewModel\ProductPage;
use Hyva\Theme\ViewModel\Store;
use Magento\Catalog\Block\Product\ReviewRendererInterface as ProductReviewRenderer;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;
use Hyva\Theme\ViewModel\SvgIcons;

/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var Store $viewModelStore */
$viewModelStore = $viewModels->require(Store::class);

/** @var ProductPage $productViewModel */
$productViewModel = $viewModels->require(ProductPage::class);

/** @var SvgIcons $hyvaicons */
$hyvaicons = $viewModels->require(SvgIcons::class);

/** @var ProductListItem $productListItemViewModel */
$productListItemViewModel = $viewModels->require(ProductListItem::class);

$viewMode = 'grid';
$imageDisplayArea = 'category_page_grid';
$showDescription = false;

$uniqueId = uniqid('_');
$name = (string) $block->getName();
$title = (string) $block->getTitle();
$headingTag = $block->getData('heading_tag') ?: 'h3';
$items = $block->getItems() ?? [];
if (is_object($items) && $items instanceof Iterator) {
    $items = iterator_to_array($items);
}

if (!$itemCount = count($items)) {
    return '';
}

$sliderIndex = 1;
$sliderItemRenderer = $block->getLayout()->getBlock('product_list_item')
    ?: $block->getChildBlock('slider.item.template')
    ?: $block->getLayout()->createBlock(Template::class);

$hideRatingSummary = (bool) $block->getData('hide_rating_summary');
$hideDetails       = (bool) $block->getData('hide_details');

$sliderItemRenderer->setData('hide_details', $hideDetails);
$sliderItemRenderer->setData('hide_rating_summary', $hideRatingSummary);

// The slider item renderer block is often a shared instance.
// If a specific item template is set for this slider, the previously set template must be reset later
// so the item template is only replaced for the one slider it is specified on.
$sharedItemRendererTemplate = null;
$isSharedItemRenderer       = $sliderItemRenderer !== $block->getChildBlock('slider.item.template');
if ($isSharedItemRenderer && $block->getChildBlock('slider.item.template')) {
    $sharedItemRendererTemplate = $sliderItemRenderer->getTemplate();
    $sliderSpecificItemTemplate = $block->getChildBlock('slider.item.template')->getTemplate();
    $sliderItemRenderer->setTemplate($sliderSpecificItemTemplate);
}

// The number of slides visible on the xl breakpoint
$maxVisibleSlides = $block->getData('max_visible') ?? 5;

$sliderSectionClasses = $block->getData('maybe_purged_tailwind_section_classes') ?? '-mx-4 md:-mx-6 xl:-mx-[104px] bg-white-smoke py-14 lg:py-10 my-0';
$slideItemClasses = $block->getData('maybe_purged_tailwind_slide_item_classes') ?? '';

$swiperUrl = $block->getViewFileUrl('js/swiper.min.js');
$swiperCssUrl = $block->getViewFileUrl('css/swiper.min.css');
?>

<script>
function initSliderComponent(uniqueId, swiperJsUrl, swiperCssUrl) {
    return {
        init() {
            if (!window.Swiper) {
                this.addJsScript(swiperJsUrl);
                this.addCss(swiperCssUrl);
            } else {
                this.initializeSwiper(uniqueId);
            }
        },
        initializeSwiper(uniqueId) {
            const swiperElement = this.$el.querySelector('.swiper_' + uniqueId);

            if (!swiperElement) {
                return;
            }

            const swiper = new Swiper(swiperElement, {
                slidesPerView: '1.5',
                spaceBetween: 12,
                draggable: true,
                autoHeight: true,
                touchEventsTarget: 'container',
                navigation: {
                    nextEl: '.swiper-next_' + uniqueId,
                    prevEl: '.swiper-prev_' + uniqueId,
                },
                scrollbar: {
                    el: '.swiper-scrollbar_' + uniqueId,
                    draggable: true,
                },
                breakpoints: {
                    768: {
                        spaceBetween: 16,
                        slidesPerView: 3.25,
                    },
                    1440: {
                        spaceBetween: 16,
                        slidesPerView: 5,
                    },
                }
            });
        },
        addJsScript(swiperJsUrl) {
            const script = document.createElement('script');
            script.type = 'text/javascript';
            script.addEventListener('load', () => {
                this.initializeSwiper(uniqueId);
            });
            script.src = swiperJsUrl;
            document.head.appendChild(script);
        },
        addCss(swiperCssUrl) {
            const link = document.createElement('link');
            link.type = 'text/css';
            link.rel = 'stylesheet';
            link.href = swiperCssUrl;
            document.head.appendChild(link);
        },
    }
}
</script>

<section
    class="flex flex-col"
    x-data="initSliderComponent('<?= $uniqueId; ?>', '<?= $swiperUrl; ?>', '<?= $swiperCssUrl; ?>')"
    x-init="init();"
    x-id="['slider-nav', 'slider-desc', 'slider-id']"
    role="group"
    aria-roledescription="<?= $escaper->escapeHtmlAttr(__('Carousel')) ?>"
    aria-label="<?= $escaper->escapeHtmlAttr(__('Carousel %1', $title)) ?>"
    :aria-describedby="$id('slider-desc')"
>
<?php if ($items): ?>
    <div class="relative ml-4 xl:ml-0">
        <?php if ($title): ?>
            <div class="flex justify-center mb-6 lg:mb-8">
                <<?= $headingTag ?> class="text-2xl lg:text-3xl font-extrabold md:pt-[72px] pt-14 md:text-[32px] text-xl text-eerie-black text-center">
                    <?= $escaper->escapeHtml($title); ?>
                </<?= $headingTag ?>>
            </div>
        <?php endif; ?>

        <div class="flex items-center justify-between">  <!-- Flex container for buttons and slider -->
            <!-- Previous Button with 40px padding to the left -->
            <div class="swiper-prev flex-shrink-0 ml-10 mr-4 hidden xl:block" >
                <button type="button" aria-label="<?= $escaper->escapeHtmlAttr(__('Previous slide')) ?>"
                        class="swiper-prev_<?= $uniqueId ?> border-2 p-3.5 bg-white flex items-center justify-center">
                    <?= $hyvaicons->renderHtml('next', 'rotate-180', 24, 24) ?>
                </button>
            </div>

            <div class="swiper swiper_<?= $uniqueId ?> overflow-hidden flex-grow max-xl:!pr-4">
                <div class="swiper-wrapper flex !h-auto">
                    <?php foreach ($items as $product):
                        // Generate a unique ID for each slide
                        $slideUniqueId = $uniqueId . '-' . uniqid();
                    ?>
                        <div class="swiper-slide <?= $escaper->escapeHtmlAttr($slideItemClasses) ?>"
                             id="slide-<?= $slideUniqueId; ?>"
                             role="group"
                             aria-label="<?= $escaper->escapeHtmlAttr(__('Item %1', $sliderIndex++)) ?>"
                             :aria-describedby="'slide-desc-' +
                             <?= $escaper->escapeHtmlAttr($product->getId()) ?> + '-' + $id('slider-id')"
                        >
                            <?= $productListItemViewModel->getItemHtmlWithRenderer(
                                $sliderItemRenderer,
                                $product,
                                $block,
                                $viewMode,
                                ProductReviewRenderer::SHORT_VIEW,
                                $imageDisplayArea,
                                $showDescription
                            ) ?>
                        </div>
                    <?php endforeach; ?>
                </div>
                <div class="swiper-scrollbar swiper-scrollbar_<?= $uniqueId ?>"></div>
            </div>

            <!-- Next Button with 40px padding to the right -->
            <div class="swiper-next flex-shrink-0 mr-10 ml-4 hidden xl:block">
                <button type="button" aria-label="<?= $escaper->escapeHtmlAttr(__('Next slide')) ?>"
                        class="swiper-next_<?= $uniqueId ?> border-2 p-3.5 bg-white flex items-center justify-center">
                    <?= $hyvaicons->renderHtml('next', '', 24, 24) ?>
                </button>
            </div>
        </div>
    </div>
<?php endif; ?>
</section>

<?php
if ($sharedItemRendererTemplate) {
    $sliderItemRenderer->setTemplate($sharedItemRendererTemplate);
}
?>
