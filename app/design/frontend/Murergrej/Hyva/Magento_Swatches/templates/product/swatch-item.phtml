<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;
use Magento\Swatches\ViewModel\Product\Renderer\Configurable as ConfigurableViewModel;

// phpcs:disable Generic.Files.LineLength.TooLong

/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var ConfigurableViewModel $configurableViewModel */
$configurableViewModel = $viewModels->require(ConfigurableViewModel::class);

$productId = $block->getProductId();
$attributeId = $block->getAttributeId();
$option = $block->getData('item');

if (!$productId || !$attributeId) {
    return '';
}
?>

<div x-data="{item: (typeof item !== 'undefined') ? item : { id: '<?= $option['id']; ?>' }}"
    x-id="['attribute-option-<?= (int) $productId ?>-'+item.id]" class="swatcher-option flex flex-col gap-y-1 items-center">
    <div class="swatcher-and-number border-2 flex flex-col items-center"
        :class="{
            'swatcher-selected': (selectedValues[<?= (int)$attributeId ?>] === item.id)
        }">
        <div class="swatcher-label">
            <template x-if="optionIsEnabled(<?= (int) $attributeId ?>, item.id) && optionIsActive(<?= (int) $attributeId ?>, item.id)">
                <label
                    :for="$id('attribute-option-<?= (int) $productId ?>-'+item.id)"
                    class="swatch-option relative cursor-pointer select-none product-option-value-label mt-[2px] p-0 w-full"
                    :style="getSwatchBackgroundStyle('<?= (int) $attributeId ?>',item.id)"
                >
                    <input
                        :id="$id('attribute-option-<?= (int) $productId ?>-'+item.id)"
                        :value="item.id"
                        name="super_attribute[<?= (int) $attributeId ?>]"
                        type="radio"
                        class="inline-block absolute p-0 border-0 focus:border-0 focus:ring-0 product-option-value-input"
                        style="z-index:-1"
                        x-on:focus="focusLabel(item.id)"
                        x-on:blur="blurLabel()"
                        x-on:change="changeOption(<?= (int) $attributeId ?>, $event.target.value)"
                        x-on:click="clearOptionIfActive(<?= (int) $attributeId ?>, item.id)"
                        x-model="selectedValues[<?= (int) $attributeId ?>]"
                        :required="getAllowedAttributeOptions(<?= (int) $attributeId ?>).filter(
                            attributeOption => selectedValues[attributeOption]
                        ).length === 0"
                        :aria-label="getSwatchText(<?= $escaper->escapeHtmlAttr($attributeId) ?>, item.id)"
                        aria-describedby="attribute-label-<?= $escaper->escapeHtmlAttr($productId . '-' . $attributeId) ?>"
                    >
                    <template x-if="isTextSwatch(<?= (int) $attributeId ?>, item.id)">
                        <div
                            x-html="getSwatchText(<?= (int) $attributeId ?>, item.id)"
                            class="pointer-events-none select-none whitespace-nowrap"
                            aria-hidden="true"
                        ></div>
                    </template>
                </label>
            </template>

            <template x-if="optionIsEnabled(<?= (int) $attributeId ?>, item.id) && !optionIsActive(<?= (int) $attributeId ?>, item.id)">
                <div
                    class="relative border-2 shadow-sm opacity-50 cursor-pointer select-none border-container-darker swatch-option bg-container-lighter"
                    :class="{
                        'w-6 h-6' : !isTextSwatch(<?= (int) $attributeId ?>, item.id),
                    }"
                    :style="getSwatchBackgroundStyle('<?= (int) $attributeId ?>',item.id)"
                >
                    <div x-html="getSwatchText(<?= (int) $attributeId ?>, item.id)"
                        class="whitespace-nowrap"
                        :class="{ 'sr-only' : !isTextSwatch(<?= (int) $attributeId ?>, item.id) }"
                    ></div>
                    <svg class="absolute inset-0 w-full h-full text-gray-500 bg-white/25">
                        <line x1="0" y1="100%" x2="100%" y2="0" class="stroke-current stroke-1"></line>
                    </svg>
                </div>
            </template>
            </div>
            <span class="swatch-code font-extrabold" x-text="getSwatchCode(<?= (int) $attributeId ?>, item.id)"></span>
        </div>
        <span class="swatch-label text-center font-medium" x-text="getOptionLabelFromOptionConfig(<?= (int) $attributeId ?>, item.id)"></span>
</div>
